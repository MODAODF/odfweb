{"version":3,"sources":["webpack:///./node_modules/brace/mode/less.js"],"names":["ace","define","acequire","exports","module","oop","TextHighlightRules","supportType","supportFunction","supportConstant","supportConstantColor","supportConstantFonts","numRe","pseudoElements","pseudoClasses","CssHighlightRules","keywordMapper","this","createKeywordMapper","support.function","support.constant","support.type","support.constant.color","support.constant.fonts","$rules","start","include","token","regex","next","caseInsensitive","media","comments","push","defaultToken","ruleset","url","strings","consumeLineEnd","escapes","normalizeRules","inherits","LessHighlightRules","keywordList","keywords","split","properties","keyword","value","indexOf","toLowerCase","first","second","comment","Range","MatchingBraceOutdent","checkOutdent","line","input","test","autoOutdent","doc","row","match","getLine","column","length","openBracePos","findMatchingBracket","indent","$getIndent","replace","call","prototype","CstyleBehaviour","Behaviour","TokenIterator","CssBehaviour","inherit","add","state","action","editor","session","text","cursor","getCursorPosition","iterator","getCurrentToken","stepBackward","type","substring","selection","range","selected","getTextRange","isMultiLine","end","propertyMap","background","#$0","background-color","transparent","fixed","background-image","url('/$0')","background-repeat","repeat","repeat-x","repeat-y","no-repeat","background-position","bottom","center","left","right","top","background-attachment","scroll","background-size","cover","contain","background-clip","border-box","padding-box","content-box","background-origin","border","solid $0","dashed $0","dotted $0","border-color","border-style","solid","dashed","dotted","double","groove","hidden","inset","none","outset","ridged","border-collapse","collapse","separate","px","em","%","clear","both","color","rgb(#$00,0,0)","default","pointer","move","wait","help","progress","n-resize","ne-resize","e-resize","se-resize","s-resize","sw-resize","w-resize","nw-resize","display","block","inline","inline-block","table-cell","empty-cells","show","hide","float","font-family","Arial","Comic Sans MS","Consolas","Courier New","Courier","Georgia","Monospace","Sans-Serif","Segoe UI","Tahoma","Times New Roman","Trebuchet MS","Verdana","font-size","font-weight","bold","normal","font-style","italic","font-variant","small-caps","height","letter-spacing","line-height","list-style-type","disc","circle","square","decimal","decimal-leading-zero","lower-roman","upper-roman","lower-greek","lower-latin","upper-latin","georgian","lower-alpha","upper-alpha","margin","margin-right","margin-left","margin-top","margin-bottom","max-height","max-width","min-height","min-width","overflow","visible","auto","overflow-x","overflow-y","padding","padding-top","padding-right","padding-bottom","padding-left","page-break-after","always","avoid","page-break-before","position","absolute","relative","static","table-layout","text-decoration","underline","line-through","blink","text-align","justify","text-transform","capitalize","uppercase","lowercase","vertical-align","visibility","white-space","nowrap","pre","pre-line","pre-wrap","width","word-spacing","filter","alpha(opacity=$0100)","text-shadow","$02px 2px 2px #777","text-overflow","ellipsis-word","clip","ellipsis","-moz-border-radius","-moz-border-radius-topright","-moz-border-radius-bottomright","-moz-border-radius-topleft","-moz-border-radius-bottomleft","-webkit-border-radius","-webkit-border-top-right-radius","-webkit-border-top-left-radius","-webkit-border-bottom-right-radius","-webkit-border-bottom-left-radius","-moz-box-shadow","-webkit-box-shadow","transform","rotate($00deg)","skew($00deg)","-moz-transform","-webkit-transform","CssCompletions","completionsDefined","defineCompletions","document","style","createElement","i","name","x","hasOwnProperty","getCompletions","pos","prefix","getTokenAt","substr","getPropertyValueCompletions","getPropertyCompletions","Object","keys","map","property","caption","snippet","meta","score","Number","MAX_VALUE","exec","values","BaseFoldMode","FoldMode","commentRegex","foldingStartMarker","RegExp","source","foldingStopMarker","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","getFoldWidget","foldStyle","fw","getFoldWidgetRange","forceMultiline","getCommentRegionBlock","index","openingBracketBlock","getCommentFoldRange","getSectionRange","closingBracketBlock","startIndent","search","startRow","startColumn","endRow","maxRow","getLength","subRange","re","depth","m","TextMode","Mode","CStyleFoldMode","HighlightRules","$outdent","$behaviour","$completer","foldingRules","lineCommentStart","blockComment","getNextLineIndent","tab","tokens","getTokenizer","getLineTokens","$id"],"mappings":"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","file":"less-mode.bundle.js","sourcesContent":["ace.define(\"ace/mode/css_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/lib/lang\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar lang = acequire(\"../lib/lang\");\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\nvar supportType = exports.supportType = \"align-content|align-items|align-self|all|animation|animation-delay|animation-direction|animation-duration|animation-fill-mode|animation-iteration-count|animation-name|animation-play-state|animation-timing-function|backface-visibility|background|background-attachment|background-blend-mode|background-clip|background-color|background-image|background-origin|background-position|background-repeat|background-size|border|border-bottom|border-bottom-color|border-bottom-left-radius|border-bottom-right-radius|border-bottom-style|border-bottom-width|border-collapse|border-color|border-image|border-image-outset|border-image-repeat|border-image-slice|border-image-source|border-image-width|border-left|border-left-color|border-left-style|border-left-width|border-radius|border-right|border-right-color|border-right-style|border-right-width|border-spacing|border-style|border-top|border-top-color|border-top-left-radius|border-top-right-radius|border-top-style|border-top-width|border-width|bottom|box-shadow|box-sizing|caption-side|clear|clip|color|column-count|column-fill|column-gap|column-rule|column-rule-color|column-rule-style|column-rule-width|column-span|column-width|columns|content|counter-increment|counter-reset|cursor|direction|display|empty-cells|filter|flex|flex-basis|flex-direction|flex-flow|flex-grow|flex-shrink|flex-wrap|float|font|font-family|font-size|font-size-adjust|font-stretch|font-style|font-variant|font-weight|hanging-punctuation|height|justify-content|left|letter-spacing|line-height|list-style|list-style-image|list-style-position|list-style-type|margin|margin-bottom|margin-left|margin-right|margin-top|max-height|max-width|min-height|min-width|nav-down|nav-index|nav-left|nav-right|nav-up|opacity|order|outline|outline-color|outline-offset|outline-style|outline-width|overflow|overflow-x|overflow-y|padding|padding-bottom|padding-left|padding-right|padding-top|page-break-after|page-break-before|page-break-inside|perspective|perspective-origin|position|quotes|resize|right|tab-size|table-layout|text-align|text-align-last|text-decoration|text-decoration-color|text-decoration-line|text-decoration-style|text-indent|text-justify|text-overflow|text-shadow|text-transform|top|transform|transform-origin|transform-style|transition|transition-delay|transition-duration|transition-property|transition-timing-function|unicode-bidi|vertical-align|visibility|white-space|width|word-break|word-spacing|word-wrap|z-index\";\nvar supportFunction = exports.supportFunction = \"rgb|rgba|url|attr|counter|counters\";\nvar supportConstant = exports.supportConstant = \"absolute|after-edge|after|all-scroll|all|alphabetic|always|antialiased|armenian|auto|avoid-column|avoid-page|avoid|balance|baseline|before-edge|before|below|bidi-override|block-line-height|block|bold|bolder|border-box|both|bottom|box|break-all|break-word|capitalize|caps-height|caption|center|central|char|circle|cjk-ideographic|clone|close-quote|col-resize|collapse|column|consider-shifts|contain|content-box|cover|crosshair|cubic-bezier|dashed|decimal-leading-zero|decimal|default|disabled|disc|disregard-shifts|distribute-all-lines|distribute-letter|distribute-space|distribute|dotted|double|e-resize|ease-in|ease-in-out|ease-out|ease|ellipsis|end|exclude-ruby|fill|fixed|georgian|glyphs|grid-height|groove|hand|hanging|hebrew|help|hidden|hiragana-iroha|hiragana|horizontal|icon|ideograph-alpha|ideograph-numeric|ideograph-parenthesis|ideograph-space|ideographic|inactive|include-ruby|inherit|initial|inline-block|inline-box|inline-line-height|inline-table|inline|inset|inside|inter-ideograph|inter-word|invert|italic|justify|katakana-iroha|katakana|keep-all|last|left|lighter|line-edge|line-through|line|linear|list-item|local|loose|lower-alpha|lower-greek|lower-latin|lower-roman|lowercase|lr-tb|ltr|mathematical|max-height|max-size|medium|menu|message-box|middle|move|n-resize|ne-resize|newspaper|no-change|no-close-quote|no-drop|no-open-quote|no-repeat|none|normal|not-allowed|nowrap|nw-resize|oblique|open-quote|outset|outside|overline|padding-box|page|pointer|pre-line|pre-wrap|pre|preserve-3d|progress|relative|repeat-x|repeat-y|repeat|replaced|reset-size|ridge|right|round|row-resize|rtl|s-resize|scroll|se-resize|separate|slice|small-caps|small-caption|solid|space|square|start|static|status-bar|step-end|step-start|steps|stretch|strict|sub|super|sw-resize|table-caption|table-cell|table-column-group|table-column|table-footer-group|table-header-group|table-row-group|table-row|table|tb-rl|text-after-edge|text-before-edge|text-bottom|text-size|text-top|text|thick|thin|transparent|underline|upper-alpha|upper-latin|upper-roman|uppercase|use-script|vertical-ideographic|vertical-text|visible|w-resize|wait|whitespace|z-index|zero\";\nvar supportConstantColor = exports.supportConstantColor = \"aliceblue|antiquewhite|aqua|aquamarine|azure|beige|bisque|black|blanchedalmond|blue|blueviolet|brown|burlywood|cadetblue|chartreuse|chocolate|coral|cornflowerblue|cornsilk|crimson|cyan|darkblue|darkcyan|darkgoldenrod|darkgray|darkgreen|darkgrey|darkkhaki|darkmagenta|darkolivegreen|darkorange|darkorchid|darkred|darksalmon|darkseagreen|darkslateblue|darkslategray|darkslategrey|darkturquoise|darkviolet|deeppink|deepskyblue|dimgray|dimgrey|dodgerblue|firebrick|floralwhite|forestgreen|fuchsia|gainsboro|ghostwhite|gold|goldenrod|gray|green|greenyellow|grey|honeydew|hotpink|indianred|indigo|ivory|khaki|lavender|lavenderblush|lawngreen|lemonchiffon|lightblue|lightcoral|lightcyan|lightgoldenrodyellow|lightgray|lightgreen|lightgrey|lightpink|lightsalmon|lightseagreen|lightskyblue|lightslategray|lightslategrey|lightsteelblue|lightyellow|lime|limegreen|linen|magenta|maroon|mediumaquamarine|mediumblue|mediumorchid|mediumpurple|mediumseagreen|mediumslateblue|mediumspringgreen|mediumturquoise|mediumvioletred|midnightblue|mintcream|mistyrose|moccasin|navajowhite|navy|oldlace|olive|olivedrab|orange|orangered|orchid|palegoldenrod|palegreen|paleturquoise|palevioletred|papayawhip|peachpuff|peru|pink|plum|powderblue|purple|rebeccapurple|red|rosybrown|royalblue|saddlebrown|salmon|sandybrown|seagreen|seashell|sienna|silver|skyblue|slateblue|slategray|slategrey|snow|springgreen|steelblue|tan|teal|thistle|tomato|turquoise|violet|wheat|white|whitesmoke|yellow|yellowgreen\";\nvar supportConstantFonts = exports.supportConstantFonts = \"arial|century|comic|courier|cursive|fantasy|garamond|georgia|helvetica|impact|lucida|symbol|system|tahoma|times|trebuchet|utopia|verdana|webdings|sans-serif|serif|monospace\";\n\nvar numRe = exports.numRe = \"\\\\-?(?:(?:[0-9]+(?:\\\\.[0-9]+)?)|(?:\\\\.[0-9]+))\";\nvar pseudoElements = exports.pseudoElements = \"(\\\\:+)\\\\b(after|before|first-letter|first-line|moz-selection|selection)\\\\b\";\nvar pseudoClasses  = exports.pseudoClasses =  \"(:)\\\\b(active|checked|disabled|empty|enabled|first-child|first-of-type|focus|hover|indeterminate|invalid|last-child|last-of-type|link|not|nth-child|nth-last-child|nth-last-of-type|nth-of-type|only-child|only-of-type|acequired|root|target|valid|visited)\\\\b\";\n\nvar CssHighlightRules = function() {\n\n    var keywordMapper = this.createKeywordMapper({\n        \"support.function\": supportFunction,\n        \"support.constant\": supportConstant,\n        \"support.type\": supportType,\n        \"support.constant.color\": supportConstantColor,\n        \"support.constant.fonts\": supportConstantFonts\n    }, \"text\", true);\n\n    this.$rules = {\n        \"start\" : [{\n            include : [\"strings\", \"url\", \"comments\"]\n        }, {\n            token: \"paren.lparen\",\n            regex: \"\\\\{\",\n            next:  \"ruleset\"\n        }, {\n            token: \"paren.rparen\",\n            regex: \"\\\\}\"\n        }, {\n            token: \"string\",\n            regex: \"@\",\n            next:  \"media\"\n        }, {\n            token: \"keyword\",\n            regex: \"#[a-z0-9-_]+\"\n        }, {\n            token: \"keyword\",\n            regex: \"%\"\n        }, {\n            token: \"variable\",\n            regex: \"\\\\.[a-z0-9-_]+\"\n        }, {\n            token: \"string\",\n            regex: \":[a-z0-9-_]+\"\n        }, {\n            token : \"constant.numeric\",\n            regex : numRe\n        }, {\n            token: \"constant\",\n            regex: \"[a-z0-9-_]+\"\n        }, {\n            caseInsensitive: true\n        }],\n\n        \"media\": [{\n            include : [\"strings\", \"url\", \"comments\"]\n        }, {\n            token: \"paren.lparen\",\n            regex: \"\\\\{\",\n            next:  \"start\"\n        }, {\n            token: \"paren.rparen\",\n            regex: \"\\\\}\",\n            next:  \"start\"\n        }, {\n            token: \"string\",\n            regex: \";\",\n            next:  \"start\"\n        }, {\n            token: \"keyword\",\n            regex: \"(?:media|supports|document|charset|import|namespace|media|supports|document\"\n                + \"|page|font|keyframes|viewport|counter-style|font-feature-values\"\n                + \"|swash|ornaments|annotation|stylistic|styleset|character-variant)\"\n        }],\n\n        \"comments\" : [{\n            token: \"comment\", // multi line comment\n            regex: \"\\\\/\\\\*\",\n            push: [{\n                token : \"comment\",\n                regex : \"\\\\*\\\\/\",\n                next : \"pop\"\n            }, {\n                defaultToken : \"comment\"\n            }]\n        }],\n\n        \"ruleset\" : [{\n            regex : \"-(webkit|ms|moz|o)-\",\n            token : \"text\"\n        }, {\n            token : \"paren.rparen\",\n            regex : \"\\\\}\",\n            next : \"start\"\n        }, {\n            include : [\"strings\", \"url\", \"comments\"]\n        }, {\n            token : [\"constant.numeric\", \"keyword\"],\n            regex : \"(\" + numRe + \")(ch|cm|deg|em|ex|fr|gd|grad|Hz|in|kHz|mm|ms|pc|pt|px|rad|rem|s|turn|vh|vm|vw|%)\"\n        }, {\n            token : \"constant.numeric\",\n            regex : numRe\n        }, {\n            token : \"constant.numeric\",  // hex6 color\n            regex : \"#[a-f0-9]{6}\"\n        }, {\n            token : \"constant.numeric\", // hex3 color\n            regex : \"#[a-f0-9]{3}\"\n        }, {\n            token : [\"punctuation\", \"entity.other.attribute-name.pseudo-element.css\"],\n            regex : pseudoElements\n        }, {\n            token : [\"punctuation\", \"entity.other.attribute-name.pseudo-class.css\"],\n            regex : pseudoClasses\n        }, {\n            include: \"url\"\n        }, {\n            token : keywordMapper,\n            regex : \"\\\\-?[a-zA-Z_][a-zA-Z0-9_\\\\-]*\"\n        }, {\n            caseInsensitive: true\n        }],\n\n        url: [{\n            token : \"support.function\",\n            regex : \"(?:url(:?-prefix)?|domain|regexp)\\\\(\",\n            push: [{\n                token : \"support.function\",\n                regex : \"\\\\)\",\n                next : \"pop\"\n            }, {\n                defaultToken: \"string\"\n            }]\n        }],\n\n        strings: [{\n            token : \"string.start\",\n            regex : \"'\",\n            push : [{\n                token : \"string.end\",\n                regex : \"'|$\",\n                next: \"pop\"\n            }, {\n                include : \"escapes\"\n            }, {\n                token : \"constant.language.escape\",\n                regex : /\\\\$/,\n                consumeLineEnd: true\n            }, {\n                defaultToken: \"string\"\n            }]\n        }, {\n            token : \"string.start\",\n            regex : '\"',\n            push : [{\n                token : \"string.end\",\n                regex : '\"|$',\n                next: \"pop\"\n            }, {\n                include : \"escapes\"\n            }, {\n                token : \"constant.language.escape\",\n                regex : /\\\\$/,\n                consumeLineEnd: true\n            }, {\n                defaultToken: \"string\"\n            }]\n        }],\n        escapes: [{\n            token : \"constant.language.escape\",\n            regex : /\\\\([a-fA-F\\d]{1,6}|[^a-fA-F\\d])/\n        }]\n\n    };\n\n    this.normalizeRules();\n};\n\noop.inherits(CssHighlightRules, TextHighlightRules);\n\nexports.CssHighlightRules = CssHighlightRules;\n\n});\n\nace.define(\"ace/mode/less_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\",\"ace/mode/css_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\nvar CssHighlightRules = acequire('./css_highlight_rules');\n\nvar LessHighlightRules = function() {\n\n\n    var keywordList = \"@import|@media|@font-face|@keyframes|@-webkit-keyframes|@supports|\" + \n        \"@charset|@plugin|@namespace|@document|@page|@viewport|@-ms-viewport|\" +\n        \"or|and|when|not\";\n\n    var keywords = keywordList.split('|');\n\n    var properties = CssHighlightRules.supportType.split('|');\n\n    var keywordMapper = this.createKeywordMapper({\n        \"support.constant\": CssHighlightRules.supportConstant,\n        \"keyword\": keywordList,\n        \"support.constant.color\": CssHighlightRules.supportConstantColor,\n        \"support.constant.fonts\": CssHighlightRules.supportConstantFonts\n    }, \"identifier\", true);   \n\n    var numRe = \"\\\\-?(?:(?:[0-9]+)|(?:[0-9]*\\\\.[0-9]+))\";\n\n    this.$rules = {\n        \"start\" : [\n            {\n                token : \"comment\",\n                regex : \"\\\\/\\\\/.*$\"\n            },\n            {\n                token : \"comment\", // multi line comment\n                regex : \"\\\\/\\\\*\",\n                next : \"comment\"\n            }, {\n                token : \"string\", // single line\n                regex : '[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]'\n            }, {\n                token : \"string\", // single line\n                regex : \"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"\n            }, {\n                token : [\"constant.numeric\", \"keyword\"],\n                regex : \"(\" + numRe + \")(ch|cm|deg|em|ex|fr|gd|grad|Hz|in|kHz|mm|ms|pc|pt|px|rad|rem|s|turn|vh|vm|vw|%)\"\n            }, {\n                token : \"constant.numeric\", // hex6 color\n                regex : \"#[a-f0-9]{6}\"\n            }, {\n                token : \"constant.numeric\", // hex3 color\n                regex : \"#[a-f0-9]{3}\"\n            }, {\n                token : \"constant.numeric\",\n                regex : numRe\n            }, {\n                token : [\"support.function\", \"paren.lparen\", \"string\", \"paren.rparen\"],\n                regex : \"(url)(\\\\()(.*)(\\\\))\"\n            }, {\n                token : [\"support.function\", \"paren.lparen\"],\n                regex : \"(:extend|[a-z0-9_\\\\-]+)(\\\\()\"\n            }, {\n                token : function(value) {\n                    if (keywords.indexOf(value.toLowerCase()) > -1)\n                        return \"keyword\";\n                    else\n                        return \"variable\";\n                },\n                regex : \"[@\\\\$][a-z0-9_\\\\-@\\\\$]*\\\\b\"\n            }, {\n                token : \"variable\",\n                regex : \"[@\\\\$]\\\\{[a-z0-9_\\\\-@\\\\$]*\\\\}\"\n            }, {\n                token : function(first, second) {\n                    if(properties.indexOf(first.toLowerCase()) > -1) {\n                        return [\"support.type.property\", \"text\"];\n                    }\n                    else {\n                        return [\"support.type.unknownProperty\", \"text\"];\n                    }\n                },\n                regex : \"([a-z0-9-_]+)(\\\\s*:)\"\n            }, {\n                token : \"keyword\",\n                regex : \"&\"   // special case - always treat as keyword\n            }, {\n                token : keywordMapper,\n                regex : \"\\\\-?[@a-z_][@a-z0-9_\\\\-]*\"\n            }, {\n                token: \"variable.language\",\n                regex: \"#[a-z0-9-_]+\"\n            }, {\n                token: \"variable.language\",\n                regex: \"\\\\.[a-z0-9-_]+\"\n            }, {\n                token: \"variable.language\",\n                regex: \":[a-z_][a-z0-9-_]*\"\n            }, {\n                token: \"constant\",\n                regex: \"[a-z0-9-_]+\"\n            }, {\n                token : \"keyword.operator\",\n                regex : \"<|>|<=|>=|=|!=|-|%|\\\\+|\\\\*\"\n            }, {\n                token : \"paren.lparen\",\n                regex : \"[[({]\"\n            }, {\n                token : \"paren.rparen\",\n                regex : \"[\\\\])}]\"\n            }, {\n                token : \"text\",\n                regex : \"\\\\s+\"\n            }, {\n                caseInsensitive: true\n            }\n        ],\n        \"comment\" : [\n            {\n                token : \"comment\", // closing comment\n                regex : \"\\\\*\\\\/\",\n                next : \"start\"\n            }, {\n                defaultToken : \"comment\"\n            }\n        ]\n    };\n    this.normalizeRules();\n};\n\noop.inherits(LessHighlightRules, TextHighlightRules);\n\nexports.LessHighlightRules = LessHighlightRules;\n\n});\n\nace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar Range = acequire(\"../range\").Range;\n\nvar MatchingBraceOutdent = function() {};\n\n(function() {\n\n    this.checkOutdent = function(line, input) {\n        if (! /^\\s+$/.test(line))\n            return false;\n\n        return /^\\s*\\}/.test(input);\n    };\n\n    this.autoOutdent = function(doc, row) {\n        var line = doc.getLine(row);\n        var match = line.match(/^(\\s*\\})/);\n\n        if (!match) return 0;\n\n        var column = match[1].length;\n        var openBracePos = doc.findMatchingBracket({row: row, column: column});\n\n        if (!openBracePos || openBracePos.row == row) return 0;\n\n        var indent = this.$getIndent(doc.getLine(openBracePos.row));\n        doc.replace(new Range(row, 0, row, column-1), indent);\n    };\n\n    this.$getIndent = function(line) {\n        return line.match(/^\\s*/)[0];\n    };\n\n}).call(MatchingBraceOutdent.prototype);\n\nexports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\n\nace.define(\"ace/mode/behaviour/css\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/behaviour\",\"ace/mode/behaviour/cstyle\",\"ace/token_iterator\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../../lib/oop\");\nvar Behaviour = acequire(\"../behaviour\").Behaviour;\nvar CstyleBehaviour = acequire(\"./cstyle\").CstyleBehaviour;\nvar TokenIterator = acequire(\"../../token_iterator\").TokenIterator;\n\nvar CssBehaviour = function () {\n\n    this.inherit(CstyleBehaviour);\n\n    this.add(\"colon\", \"insertion\", function (state, action, editor, session, text) {\n        if (text === ':') {\n            var cursor = editor.getCursorPosition();\n            var iterator = new TokenIterator(session, cursor.row, cursor.column);\n            var token = iterator.getCurrentToken();\n            if (token && token.value.match(/\\s+/)) {\n                token = iterator.stepBackward();\n            }\n            if (token && token.type === 'support.type') {\n                var line = session.doc.getLine(cursor.row);\n                var rightChar = line.substring(cursor.column, cursor.column + 1);\n                if (rightChar === ':') {\n                    return {\n                       text: '',\n                       selection: [1, 1]\n                    };\n                }\n                if (!line.substring(cursor.column).match(/^\\s*;/)) {\n                    return {\n                       text: ':;',\n                       selection: [1, 1]\n                    };\n                }\n            }\n        }\n    });\n\n    this.add(\"colon\", \"deletion\", function (state, action, editor, session, range) {\n        var selected = session.doc.getTextRange(range);\n        if (!range.isMultiLine() && selected === ':') {\n            var cursor = editor.getCursorPosition();\n            var iterator = new TokenIterator(session, cursor.row, cursor.column);\n            var token = iterator.getCurrentToken();\n            if (token && token.value.match(/\\s+/)) {\n                token = iterator.stepBackward();\n            }\n            if (token && token.type === 'support.type') {\n                var line = session.doc.getLine(range.start.row);\n                var rightChar = line.substring(range.end.column, range.end.column + 1);\n                if (rightChar === ';') {\n                    range.end.column ++;\n                    return range;\n                }\n            }\n        }\n    });\n\n    this.add(\"semicolon\", \"insertion\", function (state, action, editor, session, text) {\n        if (text === ';') {\n            var cursor = editor.getCursorPosition();\n            var line = session.doc.getLine(cursor.row);\n            var rightChar = line.substring(cursor.column, cursor.column + 1);\n            if (rightChar === ';') {\n                return {\n                   text: '',\n                   selection: [1, 1]\n                };\n            }\n        }\n    });\n\n};\noop.inherits(CssBehaviour, CstyleBehaviour);\n\nexports.CssBehaviour = CssBehaviour;\n});\n\nace.define(\"ace/mode/css_completions\",[\"require\",\"exports\",\"module\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar propertyMap = {\n    \"background\": {\"#$0\": 1},\n    \"background-color\": {\"#$0\": 1, \"transparent\": 1, \"fixed\": 1},\n    \"background-image\": {\"url('/$0')\": 1},\n    \"background-repeat\": {\"repeat\": 1, \"repeat-x\": 1, \"repeat-y\": 1, \"no-repeat\": 1, \"inherit\": 1},\n    \"background-position\": {\"bottom\":2, \"center\":2, \"left\":2, \"right\":2, \"top\":2, \"inherit\":2},\n    \"background-attachment\": {\"scroll\": 1, \"fixed\": 1},\n    \"background-size\": {\"cover\": 1, \"contain\": 1},\n    \"background-clip\": {\"border-box\": 1, \"padding-box\": 1, \"content-box\": 1},\n    \"background-origin\": {\"border-box\": 1, \"padding-box\": 1, \"content-box\": 1},\n    \"border\": {\"solid $0\": 1, \"dashed $0\": 1, \"dotted $0\": 1, \"#$0\": 1},\n    \"border-color\": {\"#$0\": 1},\n    \"border-style\": {\"solid\":2, \"dashed\":2, \"dotted\":2, \"double\":2, \"groove\":2, \"hidden\":2, \"inherit\":2, \"inset\":2, \"none\":2, \"outset\":2, \"ridged\":2},\n    \"border-collapse\": {\"collapse\": 1, \"separate\": 1},\n    \"bottom\": {\"px\": 1, \"em\": 1, \"%\": 1},\n    \"clear\": {\"left\": 1, \"right\": 1, \"both\": 1, \"none\": 1},\n    \"color\": {\"#$0\": 1, \"rgb(#$00,0,0)\": 1},\n    \"cursor\": {\"default\": 1, \"pointer\": 1, \"move\": 1, \"text\": 1, \"wait\": 1, \"help\": 1, \"progress\": 1, \"n-resize\": 1, \"ne-resize\": 1, \"e-resize\": 1, \"se-resize\": 1, \"s-resize\": 1, \"sw-resize\": 1, \"w-resize\": 1, \"nw-resize\": 1},\n    \"display\": {\"none\": 1, \"block\": 1, \"inline\": 1, \"inline-block\": 1, \"table-cell\": 1},\n    \"empty-cells\": {\"show\": 1, \"hide\": 1},\n    \"float\": {\"left\": 1, \"right\": 1, \"none\": 1},\n    \"font-family\": {\"Arial\":2,\"Comic Sans MS\":2,\"Consolas\":2,\"Courier New\":2,\"Courier\":2,\"Georgia\":2,\"Monospace\":2,\"Sans-Serif\":2, \"Segoe UI\":2,\"Tahoma\":2,\"Times New Roman\":2,\"Trebuchet MS\":2,\"Verdana\": 1},\n    \"font-size\": {\"px\": 1, \"em\": 1, \"%\": 1},\n    \"font-weight\": {\"bold\": 1, \"normal\": 1},\n    \"font-style\": {\"italic\": 1, \"normal\": 1},\n    \"font-variant\": {\"normal\": 1, \"small-caps\": 1},\n    \"height\": {\"px\": 1, \"em\": 1, \"%\": 1},\n    \"left\": {\"px\": 1, \"em\": 1, \"%\": 1},\n    \"letter-spacing\": {\"normal\": 1},\n    \"line-height\": {\"normal\": 1},\n    \"list-style-type\": {\"none\": 1, \"disc\": 1, \"circle\": 1, \"square\": 1, \"decimal\": 1, \"decimal-leading-zero\": 1, \"lower-roman\": 1, \"upper-roman\": 1, \"lower-greek\": 1, \"lower-latin\": 1, \"upper-latin\": 1, \"georgian\": 1, \"lower-alpha\": 1, \"upper-alpha\": 1},\n    \"margin\": {\"px\": 1, \"em\": 1, \"%\": 1},\n    \"margin-right\": {\"px\": 1, \"em\": 1, \"%\": 1},\n    \"margin-left\": {\"px\": 1, \"em\": 1, \"%\": 1},\n    \"margin-top\": {\"px\": 1, \"em\": 1, \"%\": 1},\n    \"margin-bottom\": {\"px\": 1, \"em\": 1, \"%\": 1},\n    \"max-height\": {\"px\": 1, \"em\": 1, \"%\": 1},\n    \"max-width\": {\"px\": 1, \"em\": 1, \"%\": 1},\n    \"min-height\": {\"px\": 1, \"em\": 1, \"%\": 1},\n    \"min-width\": {\"px\": 1, \"em\": 1, \"%\": 1},\n    \"overflow\": {\"hidden\": 1, \"visible\": 1, \"auto\": 1, \"scroll\": 1},\n    \"overflow-x\": {\"hidden\": 1, \"visible\": 1, \"auto\": 1, \"scroll\": 1},\n    \"overflow-y\": {\"hidden\": 1, \"visible\": 1, \"auto\": 1, \"scroll\": 1},\n    \"padding\": {\"px\": 1, \"em\": 1, \"%\": 1},\n    \"padding-top\": {\"px\": 1, \"em\": 1, \"%\": 1},\n    \"padding-right\": {\"px\": 1, \"em\": 1, \"%\": 1},\n    \"padding-bottom\": {\"px\": 1, \"em\": 1, \"%\": 1},\n    \"padding-left\": {\"px\": 1, \"em\": 1, \"%\": 1},\n    \"page-break-after\": {\"auto\": 1, \"always\": 1, \"avoid\": 1, \"left\": 1, \"right\": 1},\n    \"page-break-before\": {\"auto\": 1, \"always\": 1, \"avoid\": 1, \"left\": 1, \"right\": 1},\n    \"position\": {\"absolute\": 1, \"relative\": 1, \"fixed\": 1, \"static\": 1},\n    \"right\": {\"px\": 1, \"em\": 1, \"%\": 1},\n    \"table-layout\": {\"fixed\": 1, \"auto\": 1},\n    \"text-decoration\": {\"none\": 1, \"underline\": 1, \"line-through\": 1, \"blink\": 1},\n    \"text-align\": {\"left\": 1, \"right\": 1, \"center\": 1, \"justify\": 1},\n    \"text-transform\": {\"capitalize\": 1, \"uppercase\": 1, \"lowercase\": 1, \"none\": 1},\n    \"top\": {\"px\": 1, \"em\": 1, \"%\": 1},\n    \"vertical-align\": {\"top\": 1, \"bottom\": 1},\n    \"visibility\": {\"hidden\": 1, \"visible\": 1},\n    \"white-space\": {\"nowrap\": 1, \"normal\": 1, \"pre\": 1, \"pre-line\": 1, \"pre-wrap\": 1},\n    \"width\": {\"px\": 1, \"em\": 1, \"%\": 1},\n    \"word-spacing\": {\"normal\": 1},\n    \"filter\": {\"alpha(opacity=$0100)\": 1},\n\n    \"text-shadow\": {\"$02px 2px 2px #777\": 1},\n    \"text-overflow\": {\"ellipsis-word\": 1, \"clip\": 1, \"ellipsis\": 1},\n    \"-moz-border-radius\": 1,\n    \"-moz-border-radius-topright\": 1,\n    \"-moz-border-radius-bottomright\": 1,\n    \"-moz-border-radius-topleft\": 1,\n    \"-moz-border-radius-bottomleft\": 1,\n    \"-webkit-border-radius\": 1,\n    \"-webkit-border-top-right-radius\": 1,\n    \"-webkit-border-top-left-radius\": 1,\n    \"-webkit-border-bottom-right-radius\": 1,\n    \"-webkit-border-bottom-left-radius\": 1,\n    \"-moz-box-shadow\": 1,\n    \"-webkit-box-shadow\": 1,\n    \"transform\": {\"rotate($00deg)\": 1, \"skew($00deg)\": 1},\n    \"-moz-transform\": {\"rotate($00deg)\": 1, \"skew($00deg)\": 1},\n    \"-webkit-transform\": {\"rotate($00deg)\": 1, \"skew($00deg)\": 1 }\n};\n\nvar CssCompletions = function() {\n\n};\n\n(function() {\n\n    this.completionsDefined = false;\n\n    this.defineCompletions = function() {\n        if (document) {\n            var style = document.createElement('c').style;\n\n            for (var i in style) {\n                if (typeof style[i] !== 'string')\n                    continue;\n\n                var name = i.replace(/[A-Z]/g, function(x) {\n                    return '-' + x.toLowerCase();\n                });\n\n                if (!propertyMap.hasOwnProperty(name))\n                    propertyMap[name] = 1;\n            }\n        }\n\n        this.completionsDefined = true;\n    };\n\n    this.getCompletions = function(state, session, pos, prefix) {\n        if (!this.completionsDefined) {\n            this.defineCompletions();\n        }\n\n        var token = session.getTokenAt(pos.row, pos.column);\n\n        if (!token)\n            return [];\n        if (state==='ruleset'){\n            var line = session.getLine(pos.row).substr(0, pos.column);\n            if (/:[^;]+$/.test(line)) {\n                /([\\w\\-]+):[^:]*$/.test(line);\n\n                return this.getPropertyValueCompletions(state, session, pos, prefix);\n            } else {\n                return this.getPropertyCompletions(state, session, pos, prefix);\n            }\n        }\n\n        return [];\n    };\n\n    this.getPropertyCompletions = function(state, session, pos, prefix) {\n        var properties = Object.keys(propertyMap);\n        return properties.map(function(property){\n            return {\n                caption: property,\n                snippet: property + ': $0;',\n                meta: \"property\",\n                score: Number.MAX_VALUE\n            };\n        });\n    };\n\n    this.getPropertyValueCompletions = function(state, session, pos, prefix) {\n        var line = session.getLine(pos.row).substr(0, pos.column);\n        var property = (/([\\w\\-]+):[^:]*$/.exec(line) || {})[1];\n\n        if (!property)\n            return [];\n        var values = [];\n        if (property in propertyMap && typeof propertyMap[property] === \"object\") {\n            values = Object.keys(propertyMap[property]);\n        }\n        return values.map(function(value){\n            return {\n                caption: value,\n                snippet: value,\n                meta: \"property value\",\n                score: Number.MAX_VALUE\n            };\n        });\n    };\n\n}).call(CssCompletions.prototype);\n\nexports.CssCompletions = CssCompletions;\n});\n\nace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../../lib/oop\");\nvar Range = acequire(\"../../range\").Range;\nvar BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\n\nvar FoldMode = exports.FoldMode = function(commentRegex) {\n    if (commentRegex) {\n        this.foldingStartMarker = new RegExp(\n            this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start)\n        );\n        this.foldingStopMarker = new RegExp(\n            this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end)\n        );\n    }\n};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n    \n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe= /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n    \n        if (this.singleLineBlockCommentRe.test(line)) {\n            if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\n                return \"\";\n        }\n    \n        var fw = this._getFoldWidgetBase(session, foldStyle, row);\n    \n        if (!fw && this.startRegionRe.test(line))\n            return \"start\"; // lineCommentRegionStart\n    \n        return fw;\n    };\n\n    this.getFoldWidgetRange = function(session, foldStyle, row, forceMultiline) {\n        var line = session.getLine(row);\n        \n        if (this.startRegionRe.test(line))\n            return this.getCommentRegionBlock(session, line, row);\n        \n        var match = line.match(this.foldingStartMarker);\n        if (match) {\n            var i = match.index;\n\n            if (match[1])\n                return this.openingBracketBlock(session, match[1], row, i);\n                \n            var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n            \n            if (range && !range.isMultiLine()) {\n                if (forceMultiline) {\n                    range = this.getSectionRange(session, row);\n                } else if (foldStyle != \"all\")\n                    range = null;\n            }\n            \n            return range;\n        }\n\n        if (foldStyle === \"markbegin\")\n            return;\n\n        var match = line.match(this.foldingStopMarker);\n        if (match) {\n            var i = match.index + match[0].length;\n\n            if (match[1])\n                return this.closingBracketBlock(session, match[1], row, i);\n\n            return session.getCommentFoldRange(row, i, -1);\n        }\n    };\n    \n    this.getSectionRange = function(session, row) {\n        var line = session.getLine(row);\n        var startIndent = line.search(/\\S/);\n        var startRow = row;\n        var startColumn = line.length;\n        row = row + 1;\n        var endRow = row;\n        var maxRow = session.getLength();\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var indent = line.search(/\\S/);\n            if (indent === -1)\n                continue;\n            if  (startIndent > indent)\n                break;\n            var subRange = this.getFoldWidgetRange(session, \"all\", row);\n            \n            if (subRange) {\n                if (subRange.start.row <= startRow) {\n                    break;\n                } else if (subRange.isMultiLine()) {\n                    row = subRange.end.row;\n                } else if (startIndent == indent) {\n                    break;\n                }\n            }\n            endRow = row;\n        }\n        \n        return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function(session, line, row) {\n        var startColumn = line.search(/\\s*$/);\n        var maxRow = session.getLength();\n        var startRow = row;\n        \n        var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n        var depth = 1;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var m = re.exec(line);\n            if (!m) continue;\n            if (m[1]) depth--;\n            else depth++;\n\n            if (!depth) break;\n        }\n\n        var endRow = row;\n        if (endRow > startRow) {\n            return new Range(startRow, startColumn, endRow, line.length);\n        }\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/less\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/less_highlight_rules\",\"ace/mode/matching_brace_outdent\",\"ace/mode/behaviour/css\",\"ace/mode/css_completions\",\"ace/mode/folding/cstyle\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextMode = acequire(\"./text\").Mode;\nvar LessHighlightRules = acequire(\"./less_highlight_rules\").LessHighlightRules;\nvar MatchingBraceOutdent = acequire(\"./matching_brace_outdent\").MatchingBraceOutdent;\nvar CssBehaviour = acequire(\"./behaviour/css\").CssBehaviour;\nvar CssCompletions = acequire(\"./css_completions\").CssCompletions;\n\nvar CStyleFoldMode = acequire(\"./folding/cstyle\").FoldMode;\n\nvar Mode = function() {\n    this.HighlightRules = LessHighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n    this.$behaviour = new CssBehaviour();\n    this.$completer = new CssCompletions();\n    this.foldingRules = new CStyleFoldMode();\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n\n    this.lineCommentStart = \"//\";\n    this.blockComment = {start: \"/*\", end: \"*/\"};\n    \n    this.getNextLineIndent = function(state, line, tab) {\n        var indent = this.$getIndent(line);\n        var tokens = this.getTokenizer().getLineTokens(line, state).tokens;\n        if (tokens.length && tokens[tokens.length-1].type == \"comment\") {\n            return indent;\n        }\n\n        var match = line.match(/^.*\\{\\s*$/);\n        if (match) {\n            indent += tab;\n        }\n\n        return indent;\n    };\n\n    this.checkOutdent = function(state, line, input) {\n        return this.$outdent.checkOutdent(line, input);\n    };\n\n    this.autoOutdent = function(state, doc, row) {\n        this.$outdent.autoOutdent(doc, row);\n    };\n\n    this.getCompletions = function(state, session, pos, prefix) {\n        return this.$completer.getCompletions(\"ruleset\", session, pos, prefix);\n    };\n\n    this.$id = \"ace/mode/less\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/brace/mode/less.js\n// module id = ./node_modules/brace/mode/less.js\n// module chunks = 25"],"sourceRoot":""}