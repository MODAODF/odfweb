{"version":3,"sources":["webpack:///./node_modules/brace/mode/csharp.js"],"names":["ace","define","acequire","exports","module","oop","TextHighlightRules","DocCommentHighlightRules","this","$rules","token","regex","getTagRule","defaultToken","caseInsensitive","inherits","start","getStartRule","next","getEndRule","CSharpHighlightRules","keywordMapper","createKeywordMapper","end","embedRules","normalizeRules","Range","MatchingBraceOutdent","checkOutdent","line","input","test","autoOutdent","doc","row","match","getLine","column","length","openBracePos","findMatchingBracket","indent","$getIndent","replace","call","prototype","BaseFoldMode","FoldMode","commentRegex","foldingStartMarker","RegExp","source","foldingStopMarker","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","getFoldWidget","session","foldStyle","fw","getFoldWidgetRange","forceMultiline","getCommentRegionBlock","i","index","openingBracketBlock","range","getCommentFoldRange","isMultiLine","getSectionRange","closingBracketBlock","startIndent","search","startRow","startColumn","endRow","maxRow","getLength","subRange","re","depth","m","exec","CFoldMode","usingRe","getFoldWidgetRangeBase","getFoldWidgetBase","prev","getUsingStatementBlock","getRegionBlock","endColumn","TextMode","Mode","CstyleBehaviour","CStyleFoldMode","HighlightRules","$outdent","$behaviour","foldingRules","lineCommentStart","blockComment","getNextLineIndent","state","tab","tokens","getTokenizer","getLineTokens","type","createWorker","$id"],"mappings":"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","file":"cs-mode.bundle.js","sourcesContent":["ace.define(\"ace/mode/doc_comment_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\nvar DocCommentHighlightRules = function() {\n    this.$rules = {\n        \"start\" : [ {\n            token : \"comment.doc.tag\",\n            regex : \"@[\\\\w\\\\d_]+\" // TODO: fix email addresses\n        }, \n        DocCommentHighlightRules.getTagRule(),\n        {\n            defaultToken : \"comment.doc\",\n            caseInsensitive: true\n        }]\n    };\n};\n\noop.inherits(DocCommentHighlightRules, TextHighlightRules);\n\nDocCommentHighlightRules.getTagRule = function(start) {\n    return {\n        token : \"comment.doc.tag.storage.type\",\n        regex : \"\\\\b(?:TODO|FIXME|XXX|HACK)\\\\b\"\n    };\n};\n\nDocCommentHighlightRules.getStartRule = function(start) {\n    return {\n        token : \"comment.doc\", // doc comment\n        regex : \"\\\\/\\\\*(?=\\\\*)\",\n        next  : start\n    };\n};\n\nDocCommentHighlightRules.getEndRule = function (start) {\n    return {\n        token : \"comment.doc\", // closing comment\n        regex : \"\\\\*\\\\/\",\n        next  : start\n    };\n};\n\n\nexports.DocCommentHighlightRules = DocCommentHighlightRules;\n\n});\n\nace.define(\"ace/mode/csharp_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/doc_comment_highlight_rules\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar DocCommentHighlightRules = acequire(\"./doc_comment_highlight_rules\").DocCommentHighlightRules;\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\nvar CSharpHighlightRules = function() {\n    var keywordMapper = this.createKeywordMapper({\n        \"variable.language\": \"this\",\n        \"keyword\": \"abstract|event|new|struct|as|explicit|null|switch|base|extern|object|this|bool|false|operator|throw|break|finally|out|true|byte|fixed|override|try|case|float|params|typeof|catch|for|private|uint|char|foreach|protected|ulong|checked|goto|public|unchecked|class|if|readonly|unsafe|const|implicit|ref|ushort|continue|in|return|using|decimal|int|sbyte|virtual|default|interface|sealed|volatile|delegate|internal|partial|short|void|do|is|sizeof|while|double|lock|stackalloc|else|long|static|enum|namespace|string|var|dynamic\",\n        \"constant.language\": \"null|true|false\"\n    }, \"identifier\");\n\n    this.$rules = {\n        \"start\" : [\n            {\n                token : \"comment\",\n                regex : \"\\\\/\\\\/.*$\"\n            },\n            DocCommentHighlightRules.getStartRule(\"doc-start\"),\n            {\n                token : \"comment\", // multi line comment\n                regex : \"\\\\/\\\\*\",\n                next : \"comment\"\n            }, {\n                token : \"string\", // character\n                regex : /'(?:.|\\\\(:?u[\\da-fA-F]+|x[\\da-fA-F]+|[tbrf'\"n]))?'/\n            }, {\n                token : \"string\", start : '\"', end : '\"|$', next: [\n                    {token: \"constant.language.escape\", regex: /\\\\(:?u[\\da-fA-F]+|x[\\da-fA-F]+|[tbrf'\"n])/},\n                    {token: \"invalid\", regex: /\\\\./}\n                ]\n            }, {\n                token : \"string\", start : '@\"', end : '\"', next:[\n                    {token: \"constant.language.escape\", regex: '\"\"'}\n                ]\n            }, {\n                token : \"string\", start : /\\$\"/, end : '\"|$', next: [\n                    {token: \"constant.language.escape\", regex: /\\\\(:?$)|{{/},\n                    {token: \"constant.language.escape\", regex: /\\\\(:?u[\\da-fA-F]+|x[\\da-fA-F]+|[tbrf'\"n])/},\n                    {token: \"invalid\", regex: /\\\\./}\n                ]\n            }, {\n                token : \"constant.numeric\", // hex\n                regex : \"0[xX][0-9a-fA-F]+\\\\b\"\n            }, {\n                token : \"constant.numeric\", // float\n                regex : \"[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?\\\\b\"\n            }, {\n                token : \"constant.language.boolean\",\n                regex : \"(?:true|false)\\\\b\"\n            }, {\n                token : keywordMapper,\n                regex : \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\n            }, {\n                token : \"keyword.operator\",\n                regex : \"!|\\\\$|%|&|\\\\*|\\\\-\\\\-|\\\\-|\\\\+\\\\+|\\\\+|~|===|==|=|!=|!==|<=|>=|<<=|>>=|>>>=|<>|<|>|!|&&|\\\\|\\\\||\\\\?\\\\:|\\\\*=|%=|\\\\+=|\\\\-=|&=|\\\\^=|\\\\b(?:in|instanceof|new|delete|typeof|void)\"\n            }, {\n                token : \"keyword\",\n                regex : \"^\\\\s*#(if|else|elif|endif|define|undef|warning|error|line|region|endregion|pragma)\"\n            }, {\n                token : \"punctuation.operator\",\n                regex : \"\\\\?|\\\\:|\\\\,|\\\\;|\\\\.\"\n            }, {\n                token : \"paren.lparen\",\n                regex : \"[[({]\"\n            }, {\n                token : \"paren.rparen\",\n                regex : \"[\\\\])}]\"\n            }, {\n                token : \"text\",\n                regex : \"\\\\s+\"\n            }\n        ],\n        \"comment\" : [\n            {\n                token : \"comment\", // closing comment\n                regex : \"\\\\*\\\\/\",\n                next : \"start\"\n            }, {\n                defaultToken : \"comment\"\n            }\n        ]\n    };\n\n    this.embedRules(DocCommentHighlightRules, \"doc-\",\n        [ DocCommentHighlightRules.getEndRule(\"start\") ]);\n    this.normalizeRules();\n};\n\noop.inherits(CSharpHighlightRules, TextHighlightRules);\n\nexports.CSharpHighlightRules = CSharpHighlightRules;\n});\n\nace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar Range = acequire(\"../range\").Range;\n\nvar MatchingBraceOutdent = function() {};\n\n(function() {\n\n    this.checkOutdent = function(line, input) {\n        if (! /^\\s+$/.test(line))\n            return false;\n\n        return /^\\s*\\}/.test(input);\n    };\n\n    this.autoOutdent = function(doc, row) {\n        var line = doc.getLine(row);\n        var match = line.match(/^(\\s*\\})/);\n\n        if (!match) return 0;\n\n        var column = match[1].length;\n        var openBracePos = doc.findMatchingBracket({row: row, column: column});\n\n        if (!openBracePos || openBracePos.row == row) return 0;\n\n        var indent = this.$getIndent(doc.getLine(openBracePos.row));\n        doc.replace(new Range(row, 0, row, column-1), indent);\n    };\n\n    this.$getIndent = function(line) {\n        return line.match(/^\\s*/)[0];\n    };\n\n}).call(MatchingBraceOutdent.prototype);\n\nexports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\n\nace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../../lib/oop\");\nvar Range = acequire(\"../../range\").Range;\nvar BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\n\nvar FoldMode = exports.FoldMode = function(commentRegex) {\n    if (commentRegex) {\n        this.foldingStartMarker = new RegExp(\n            this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start)\n        );\n        this.foldingStopMarker = new RegExp(\n            this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end)\n        );\n    }\n};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n    \n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe= /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n    \n        if (this.singleLineBlockCommentRe.test(line)) {\n            if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\n                return \"\";\n        }\n    \n        var fw = this._getFoldWidgetBase(session, foldStyle, row);\n    \n        if (!fw && this.startRegionRe.test(line))\n            return \"start\"; // lineCommentRegionStart\n    \n        return fw;\n    };\n\n    this.getFoldWidgetRange = function(session, foldStyle, row, forceMultiline) {\n        var line = session.getLine(row);\n        \n        if (this.startRegionRe.test(line))\n            return this.getCommentRegionBlock(session, line, row);\n        \n        var match = line.match(this.foldingStartMarker);\n        if (match) {\n            var i = match.index;\n\n            if (match[1])\n                return this.openingBracketBlock(session, match[1], row, i);\n                \n            var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n            \n            if (range && !range.isMultiLine()) {\n                if (forceMultiline) {\n                    range = this.getSectionRange(session, row);\n                } else if (foldStyle != \"all\")\n                    range = null;\n            }\n            \n            return range;\n        }\n\n        if (foldStyle === \"markbegin\")\n            return;\n\n        var match = line.match(this.foldingStopMarker);\n        if (match) {\n            var i = match.index + match[0].length;\n\n            if (match[1])\n                return this.closingBracketBlock(session, match[1], row, i);\n\n            return session.getCommentFoldRange(row, i, -1);\n        }\n    };\n    \n    this.getSectionRange = function(session, row) {\n        var line = session.getLine(row);\n        var startIndent = line.search(/\\S/);\n        var startRow = row;\n        var startColumn = line.length;\n        row = row + 1;\n        var endRow = row;\n        var maxRow = session.getLength();\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var indent = line.search(/\\S/);\n            if (indent === -1)\n                continue;\n            if  (startIndent > indent)\n                break;\n            var subRange = this.getFoldWidgetRange(session, \"all\", row);\n            \n            if (subRange) {\n                if (subRange.start.row <= startRow) {\n                    break;\n                } else if (subRange.isMultiLine()) {\n                    row = subRange.end.row;\n                } else if (startIndent == indent) {\n                    break;\n                }\n            }\n            endRow = row;\n        }\n        \n        return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function(session, line, row) {\n        var startColumn = line.search(/\\s*$/);\n        var maxRow = session.getLength();\n        var startRow = row;\n        \n        var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n        var depth = 1;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var m = re.exec(line);\n            if (!m) continue;\n            if (m[1]) depth--;\n            else depth++;\n\n            if (!depth) break;\n        }\n\n        var endRow = row;\n        if (endRow > startRow) {\n            return new Range(startRow, startColumn, endRow, line.length);\n        }\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/folding/csharp\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/cstyle\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../../lib/oop\");\nvar Range = acequire(\"../../range\").Range;\nvar CFoldMode = acequire(\"./cstyle\").FoldMode;\n\nvar FoldMode = exports.FoldMode = function(commentRegex) {\n    if (commentRegex) {\n        this.foldingStartMarker = new RegExp(\n            this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start)\n        );\n        this.foldingStopMarker = new RegExp(\n            this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end)\n        );\n    }\n};\noop.inherits(FoldMode, CFoldMode);\n\n(function() {\n    this.usingRe = /^\\s*using \\S/;\n\n    this.getFoldWidgetRangeBase = this.getFoldWidgetRange;\n    this.getFoldWidgetBase = this.getFoldWidget;\n    \n    this.getFoldWidget = function(session, foldStyle, row) {\n        var fw = this.getFoldWidgetBase(session, foldStyle, row);\n        if (!fw) {\n            var line = session.getLine(row);\n            if (/^\\s*#region\\b/.test(line)) \n                return \"start\";\n            var usingRe = this.usingRe;\n            if (usingRe.test(line)) {\n                var prev = session.getLine(row - 1);\n                var next = session.getLine(row + 1);\n                if (!usingRe.test(prev) && usingRe.test(next))\n                    return \"start\";\n            }\n        }\n        return fw;\n    };\n    \n    this.getFoldWidgetRange = function(session, foldStyle, row) {\n        var range = this.getFoldWidgetRangeBase(session, foldStyle, row);\n        if (range)\n            return range;\n\n        var line = session.getLine(row);\n        if (this.usingRe.test(line))\n            return this.getUsingStatementBlock(session, line, row);\n            \n        if (/^\\s*#region\\b/.test(line))\n            return this.getRegionBlock(session, line, row);\n    };\n    \n    this.getUsingStatementBlock = function(session, line, row) {\n        var startColumn = line.match(this.usingRe)[0].length - 1;\n        var maxRow = session.getLength();\n        var startRow = row;\n        var endRow = row;\n\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            if (/^\\s*$/.test(line))\n                continue;\n            if (!this.usingRe.test(line))\n                break;\n\n            endRow = row;\n        }\n\n        if (endRow > startRow) {\n            var endColumn = session.getLine(endRow).length;\n            return new Range(startRow, startColumn, endRow, endColumn);\n        }\n    };\n    \n    this.getRegionBlock = function(session, line, row) {\n        var startColumn = line.search(/\\s*$/);\n        var maxRow = session.getLength();\n        var startRow = row;\n        \n        var re = /^\\s*#(end)?region\\b/;\n        var depth = 1;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var m = re.exec(line);\n            if (!m)\n                continue;\n            if (m[1])\n                depth--;\n            else\n                depth++;\n\n            if (!depth)\n                break;\n        }\n\n        var endRow = row;\n        if (endRow > startRow) {\n            return new Range(startRow, startColumn, endRow, line.length);\n        }\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/csharp\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/csharp_highlight_rules\",\"ace/mode/matching_brace_outdent\",\"ace/mode/behaviour/cstyle\",\"ace/mode/folding/csharp\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextMode = acequire(\"./text\").Mode;\nvar CSharpHighlightRules = acequire(\"./csharp_highlight_rules\").CSharpHighlightRules;\nvar MatchingBraceOutdent = acequire(\"./matching_brace_outdent\").MatchingBraceOutdent;\nvar CstyleBehaviour = acequire(\"./behaviour/cstyle\").CstyleBehaviour;\nvar CStyleFoldMode = acequire(\"./folding/csharp\").FoldMode;\n\nvar Mode = function() {\n    this.HighlightRules = CSharpHighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n    this.$behaviour = new CstyleBehaviour();\n    this.foldingRules = new CStyleFoldMode();\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n    \n    this.lineCommentStart = \"//\";\n    this.blockComment = {start: \"/*\", end: \"*/\"};\n    \n    this.getNextLineIndent = function(state, line, tab) {\n        var indent = this.$getIndent(line);\n  \n        var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n        var tokens = tokenizedLine.tokens;\n  \n        if (tokens.length && tokens[tokens.length-1].type == \"comment\") {\n            return indent;\n        }\n    \n        if (state == \"start\") {\n            var match = line.match(/^.*[\\{\\(\\[]\\s*$/);\n            if (match) {\n                indent += tab;\n            }\n        }\n  \n        return indent;\n    };\n\n    this.checkOutdent = function(state, line, input) {\n        return this.$outdent.checkOutdent(line, input);\n    };\n  \n    this.autoOutdent = function(state, doc, row) {\n        this.$outdent.autoOutdent(doc, row);\n    };\n\n\n    this.createWorker = function(session) {\n        return null;\n    };\n\n    this.$id = \"ace/mode/csharp\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});\n"],"sourceRoot":""}