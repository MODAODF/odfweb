{"version":3,"sources":["webpack:///./node_modules/brace/mode/xml.js"],"names":["ace","define","acequire","exports","module","oop","TextHighlightRules","XmlHighlightRules","normalize","tagRegex","this","$rules","start","token","regex","next","caseInsensitive","include","defaultToken","processing_instruction","doctype","push","int_subset","cdata","comment","reference","attr_reference","tag","tag_whitespace","whitespace","string","attributes","attribute_value","constructor","normalizeRules","embedTagRules","HighlightRules","prefix","unshift","onMatch","value","currentState","stack","splice","embedRules","call","prototype","inherits","Behaviour","TokenIterator","is","type","lastIndexOf","XmlBehaviour","add","state","action","editor","session","text","quote","selected","doc","getTextRange","getSelectionRange","getWrapBehavioursEnabled","selection","cursor","getCursorPosition","rightChar","getLine","row","substring","column","iterator","getCurrentToken","stepBackward","rightSpace","match","range","isMultiLine","end","position","firstChar","charAt","lastChar","length","tokenEnd","getCurrentTokenColumn","stepForward","tokenRow","getCurrentTokenRow","tokenColumn","element","voidElements","hasOwnProperty","toLowerCase","line","indexOf","nextToken","getTokenAt","nextIndent","$getIndent","indent","getTabString","Range","BaseFoldMode","FoldMode","optionalEndTags","mixin","Tag","tagName","closing","selfClosing","getFoldWidget","foldStyle","_getFirstTagInLine","_findEndTagInLine","getCommentFoldWidget","test","getState","tokens","getTokens","i","startColumn","_readTagForward","_readTagBackward","_pop","top","pop","getFoldWidgetRange","firstTag","getCommentFoldRange","fromPoints","lang","TextMode","Mode","XmlFoldMode","WorkerClient","$behaviour","foldingRules","arrayToMap","blockComment","createWorker","worker","attachToDocument","getDocument","on","e","setAnnotations","data","clearAnnotations","$id"],"mappings":"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","file":"xml-mode.bundle.js","sourcesContent":["ace.define(\"ace/mode/xml_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\nvar XmlHighlightRules = function(normalize) {\n    var tagRegex = \"[_:a-zA-Z\\xc0-\\uffff][-_:.a-zA-Z0-9\\xc0-\\uffff]*\";\n\n    this.$rules = {\n        start : [\n            {token : \"string.cdata.xml\", regex : \"<\\\\!\\\\[CDATA\\\\[\", next : \"cdata\"},\n            {\n                token : [\"punctuation.instruction.xml\", \"keyword.instruction.xml\"],\n                regex : \"(<\\\\?)(\" + tagRegex + \")\", next : \"processing_instruction\"\n            },\n            {token : \"comment.start.xml\", regex : \"<\\\\!--\", next : \"comment\"},\n            {\n                token : [\"xml-pe.doctype.xml\", \"xml-pe.doctype.xml\"],\n                regex : \"(<\\\\!)(DOCTYPE)(?=[\\\\s])\", next : \"doctype\", caseInsensitive: true\n            },\n            {include : \"tag\"},\n            {token : \"text.end-tag-open.xml\", regex: \"</\"},\n            {token : \"text.tag-open.xml\", regex: \"<\"},\n            {include : \"reference\"},\n            {defaultToken : \"text.xml\"}\n        ],\n\n        processing_instruction : [{\n            token : \"entity.other.attribute-name.decl-attribute-name.xml\",\n            regex : tagRegex\n        }, {\n            token : \"keyword.operator.decl-attribute-equals.xml\",\n            regex : \"=\"\n        }, {\n            include: \"whitespace\"\n        }, {\n            include: \"string\"\n        }, {\n            token : \"punctuation.xml-decl.xml\",\n            regex : \"\\\\?>\",\n            next : \"start\"\n        }],\n\n        doctype : [\n            {include : \"whitespace\"},\n            {include : \"string\"},\n            {token : \"xml-pe.doctype.xml\", regex : \">\", next : \"start\"},\n            {token : \"xml-pe.xml\", regex : \"[-_a-zA-Z0-9:]+\"},\n            {token : \"punctuation.int-subset\", regex : \"\\\\[\", push : \"int_subset\"}\n        ],\n\n        int_subset : [{\n            token : \"text.xml\",\n            regex : \"\\\\s+\"\n        }, {\n            token: \"punctuation.int-subset.xml\",\n            regex: \"]\",\n            next: \"pop\"\n        }, {\n            token : [\"punctuation.markup-decl.xml\", \"keyword.markup-decl.xml\"],\n            regex : \"(<\\\\!)(\" + tagRegex + \")\",\n            push : [{\n                token : \"text\",\n                regex : \"\\\\s+\"\n            },\n            {\n                token : \"punctuation.markup-decl.xml\",\n                regex : \">\",\n                next : \"pop\"\n            },\n            {include : \"string\"}]\n        }],\n\n        cdata : [\n            {token : \"string.cdata.xml\", regex : \"\\\\]\\\\]>\", next : \"start\"},\n            {token : \"text.xml\", regex : \"\\\\s+\"},\n            {token : \"text.xml\", regex : \"(?:[^\\\\]]|\\\\](?!\\\\]>))+\"}\n        ],\n\n        comment : [\n            {token : \"comment.end.xml\", regex : \"-->\", next : \"start\"},\n            {defaultToken : \"comment.xml\"}\n        ],\n\n        reference : [{\n            token : \"constant.language.escape.reference.xml\",\n            regex : \"(?:&#[0-9]+;)|(?:&#x[0-9a-fA-F]+;)|(?:&[a-zA-Z0-9_:\\\\.-]+;)\"\n        }],\n\n        attr_reference : [{\n            token : \"constant.language.escape.reference.attribute-value.xml\",\n            regex : \"(?:&#[0-9]+;)|(?:&#x[0-9a-fA-F]+;)|(?:&[a-zA-Z0-9_:\\\\.-]+;)\"\n        }],\n\n        tag : [{\n            token : [\"meta.tag.punctuation.tag-open.xml\", \"meta.tag.punctuation.end-tag-open.xml\", \"meta.tag.tag-name.xml\"],\n            regex : \"(?:(<)|(</))((?:\" + tagRegex + \":)?\" + tagRegex + \")\",\n            next: [\n                {include : \"attributes\"},\n                {token : \"meta.tag.punctuation.tag-close.xml\", regex : \"/?>\", next : \"start\"}\n            ]\n        }],\n\n        tag_whitespace : [\n            {token : \"text.tag-whitespace.xml\", regex : \"\\\\s+\"}\n        ],\n        whitespace : [\n            {token : \"text.whitespace.xml\", regex : \"\\\\s+\"}\n        ],\n        string: [{\n            token : \"string.xml\",\n            regex : \"'\",\n            push : [\n                {token : \"string.xml\", regex: \"'\", next: \"pop\"},\n                {defaultToken : \"string.xml\"}\n            ]\n        }, {\n            token : \"string.xml\",\n            regex : '\"',\n            push : [\n                {token : \"string.xml\", regex: '\"', next: \"pop\"},\n                {defaultToken : \"string.xml\"}\n            ]\n        }],\n\n        attributes: [{\n            token : \"entity.other.attribute-name.xml\",\n            regex : tagRegex\n        }, {\n            token : \"keyword.operator.attribute-equals.xml\",\n            regex : \"=\"\n        }, {\n            include: \"tag_whitespace\"\n        }, {\n            include: \"attribute_value\"\n        }],\n\n        attribute_value: [{\n            token : \"string.attribute-value.xml\",\n            regex : \"'\",\n            push : [\n                {token : \"string.attribute-value.xml\", regex: \"'\", next: \"pop\"},\n                {include : \"attr_reference\"},\n                {defaultToken : \"string.attribute-value.xml\"}\n            ]\n        }, {\n            token : \"string.attribute-value.xml\",\n            regex : '\"',\n            push : [\n                {token : \"string.attribute-value.xml\", regex: '\"', next: \"pop\"},\n                {include : \"attr_reference\"},\n                {defaultToken : \"string.attribute-value.xml\"}\n            ]\n        }]\n    };\n\n    if (this.constructor === XmlHighlightRules)\n        this.normalizeRules();\n};\n\n\n(function() {\n\n    this.embedTagRules = function(HighlightRules, prefix, tag){\n        this.$rules.tag.unshift({\n            token : [\"meta.tag.punctuation.tag-open.xml\", \"meta.tag.\" + tag + \".tag-name.xml\"],\n            regex : \"(<)(\" + tag + \"(?=\\\\s|>|$))\",\n            next: [\n                {include : \"attributes\"},\n                {token : \"meta.tag.punctuation.tag-close.xml\", regex : \"/?>\", next : prefix + \"start\"}\n            ]\n        });\n\n        this.$rules[tag + \"-end\"] = [\n            {include : \"attributes\"},\n            {token : \"meta.tag.punctuation.tag-close.xml\", regex : \"/?>\",  next: \"start\",\n                onMatch : function(value, currentState, stack) {\n                    stack.splice(0);\n                    return this.token;\n            }}\n        ];\n\n        this.embedRules(HighlightRules, prefix, [{\n            token: [\"meta.tag.punctuation.end-tag-open.xml\", \"meta.tag.\" + tag + \".tag-name.xml\"],\n            regex : \"(</)(\" + tag + \"(?=\\\\s|>|$))\",\n            next: tag + \"-end\"\n        }, {\n            token: \"string.cdata.xml\",\n            regex : \"<\\\\!\\\\[CDATA\\\\[\"\n        }, {\n            token: \"string.cdata.xml\",\n            regex : \"\\\\]\\\\]>\"\n        }]);\n    };\n\n}).call(TextHighlightRules.prototype);\n\noop.inherits(XmlHighlightRules, TextHighlightRules);\n\nexports.XmlHighlightRules = XmlHighlightRules;\n});\n\nace.define(\"ace/mode/behaviour/xml\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/behaviour\",\"ace/token_iterator\",\"ace/lib/lang\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../../lib/oop\");\nvar Behaviour = acequire(\"../behaviour\").Behaviour;\nvar TokenIterator = acequire(\"../../token_iterator\").TokenIterator;\nvar lang = acequire(\"../../lib/lang\");\n\nfunction is(token, type) {\n    return token.type.lastIndexOf(type + \".xml\") > -1;\n}\n\nvar XmlBehaviour = function () {\n\n    this.add(\"string_dquotes\", \"insertion\", function (state, action, editor, session, text) {\n        if (text == '\"' || text == \"'\") {\n            var quote = text;\n            var selected = session.doc.getTextRange(editor.getSelectionRange());\n            if (selected !== \"\" && selected !== \"'\" && selected != '\"' && editor.getWrapBehavioursEnabled()) {\n                return {\n                    text: quote + selected + quote,\n                    selection: false\n                };\n            }\n\n            var cursor = editor.getCursorPosition();\n            var line = session.doc.getLine(cursor.row);\n            var rightChar = line.substring(cursor.column, cursor.column + 1);\n            var iterator = new TokenIterator(session, cursor.row, cursor.column);\n            var token = iterator.getCurrentToken();\n\n            if (rightChar == quote && (is(token, \"attribute-value\") || is(token, \"string\"))) {\n                return {\n                    text: \"\",\n                    selection: [1, 1]\n                };\n            }\n\n            if (!token)\n                token = iterator.stepBackward();\n\n            if (!token)\n                return;\n\n            while (is(token, \"tag-whitespace\") || is(token, \"whitespace\")) {\n                token = iterator.stepBackward();\n            }\n            var rightSpace = !rightChar || rightChar.match(/\\s/);\n            if (is(token, \"attribute-equals\") && (rightSpace || rightChar == '>') || (is(token, \"decl-attribute-equals\") && (rightSpace || rightChar == '?'))) {\n                return {\n                    text: quote + quote,\n                    selection: [1, 1]\n                };\n            }\n        }\n    });\n\n    this.add(\"string_dquotes\", \"deletion\", function(state, action, editor, session, range) {\n        var selected = session.doc.getTextRange(range);\n        if (!range.isMultiLine() && (selected == '\"' || selected == \"'\")) {\n            var line = session.doc.getLine(range.start.row);\n            var rightChar = line.substring(range.start.column + 1, range.start.column + 2);\n            if (rightChar == selected) {\n                range.end.column++;\n                return range;\n            }\n        }\n    });\n\n    this.add(\"autoclosing\", \"insertion\", function (state, action, editor, session, text) {\n        if (text == '>') {\n            var position = editor.getSelectionRange().start;\n            var iterator = new TokenIterator(session, position.row, position.column);\n            var token = iterator.getCurrentToken() || iterator.stepBackward();\n            if (!token || !(is(token, \"tag-name\") || is(token, \"tag-whitespace\") || is(token, \"attribute-name\") || is(token, \"attribute-equals\") || is(token, \"attribute-value\")))\n                return;\n            if (is(token, \"reference.attribute-value\"))\n                return;\n            if (is(token, \"attribute-value\")) {\n                var firstChar = token.value.charAt(0);\n                if (firstChar == '\"' || firstChar == \"'\") {\n                    var lastChar = token.value.charAt(token.value.length - 1);\n                    var tokenEnd = iterator.getCurrentTokenColumn() + token.value.length;\n                    if (tokenEnd > position.column || tokenEnd == position.column && firstChar != lastChar)\n                        return;\n                }\n            }\n            while (!is(token, \"tag-name\")) {\n                token = iterator.stepBackward();\n                if (token.value == \"<\") {\n                    token = iterator.stepForward();\n                    break;\n                }\n            }\n\n            var tokenRow = iterator.getCurrentTokenRow();\n            var tokenColumn = iterator.getCurrentTokenColumn();\n            if (is(iterator.stepBackward(), \"end-tag-open\"))\n                return;\n\n            var element = token.value;\n            if (tokenRow == position.row)\n                element = element.substring(0, position.column - tokenColumn);\n\n            if (this.voidElements.hasOwnProperty(element.toLowerCase()))\n                 return;\n\n            return {\n               text: \">\" + \"</\" + element + \">\",\n               selection: [1, 1]\n            };\n        }\n    });\n\n    this.add(\"autoindent\", \"insertion\", function (state, action, editor, session, text) {\n        if (text == \"\\n\") {\n            var cursor = editor.getCursorPosition();\n            var line = session.getLine(cursor.row);\n            var iterator = new TokenIterator(session, cursor.row, cursor.column);\n            var token = iterator.getCurrentToken();\n\n            if (token && token.type.indexOf(\"tag-close\") !== -1) {\n                if (token.value == \"/>\")\n                    return;\n                while (token && token.type.indexOf(\"tag-name\") === -1) {\n                    token = iterator.stepBackward();\n                }\n\n                if (!token) {\n                    return;\n                }\n\n                var tag = token.value;\n                var row = iterator.getCurrentTokenRow();\n                token = iterator.stepBackward();\n                if (!token || token.type.indexOf(\"end-tag\") !== -1) {\n                    return;\n                }\n\n                if (this.voidElements && !this.voidElements[tag]) {\n                    var nextToken = session.getTokenAt(cursor.row, cursor.column+1);\n                    var line = session.getLine(row);\n                    var nextIndent = this.$getIndent(line);\n                    var indent = nextIndent + session.getTabString();\n\n                    if (nextToken && nextToken.value === \"</\") {\n                        return {\n                            text: \"\\n\" + indent + \"\\n\" + nextIndent,\n                            selection: [1, indent.length, 1, indent.length]\n                        };\n                    } else {\n                        return {\n                            text: \"\\n\" + indent\n                        };\n                    }\n                }\n            }\n        }\n    });\n\n};\n\noop.inherits(XmlBehaviour, Behaviour);\n\nexports.XmlBehaviour = XmlBehaviour;\n});\n\nace.define(\"ace/mode/folding/xml\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/lib/lang\",\"ace/range\",\"ace/mode/folding/fold_mode\",\"ace/token_iterator\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../../lib/oop\");\nvar lang = acequire(\"../../lib/lang\");\nvar Range = acequire(\"../../range\").Range;\nvar BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\nvar TokenIterator = acequire(\"../../token_iterator\").TokenIterator;\n\nvar FoldMode = exports.FoldMode = function(voidElements, optionalEndTags) {\n    BaseFoldMode.call(this);\n    this.voidElements = voidElements || {};\n    this.optionalEndTags = oop.mixin({}, this.voidElements);\n    if (optionalEndTags)\n        oop.mixin(this.optionalEndTags, optionalEndTags);\n    \n};\noop.inherits(FoldMode, BaseFoldMode);\n\nvar Tag = function() {\n    this.tagName = \"\";\n    this.closing = false;\n    this.selfClosing = false;\n    this.start = {row: 0, column: 0};\n    this.end = {row: 0, column: 0};\n};\n\nfunction is(token, type) {\n    return token.type.lastIndexOf(type + \".xml\") > -1;\n}\n\n(function() {\n\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var tag = this._getFirstTagInLine(session, row);\n\n        if (!tag)\n            return this.getCommentFoldWidget(session, row);\n\n        if (tag.closing || (!tag.tagName && tag.selfClosing))\n            return foldStyle == \"markbeginend\" ? \"end\" : \"\";\n\n        if (!tag.tagName || tag.selfClosing || this.voidElements.hasOwnProperty(tag.tagName.toLowerCase()))\n            return \"\";\n\n        if (this._findEndTagInLine(session, row, tag.tagName, tag.end.column))\n            return \"\";\n\n        return \"start\";\n    };\n\n    this.getCommentFoldWidget = function(session, row) {\n        if (/comment/.test(session.getState(row)) && /<!-/.test(session.getLine(row)))\n            return \"start\";\n        return \"\";\n    };\n    this._getFirstTagInLine = function(session, row) {\n        var tokens = session.getTokens(row);\n        var tag = new Tag();\n\n        for (var i = 0; i < tokens.length; i++) {\n            var token = tokens[i];\n            if (is(token, \"tag-open\")) {\n                tag.end.column = tag.start.column + token.value.length;\n                tag.closing = is(token, \"end-tag-open\");\n                token = tokens[++i];\n                if (!token)\n                    return null;\n                tag.tagName = token.value;\n                tag.end.column += token.value.length;\n                for (i++; i < tokens.length; i++) {\n                    token = tokens[i];\n                    tag.end.column += token.value.length;\n                    if (is(token, \"tag-close\")) {\n                        tag.selfClosing = token.value == '/>';\n                        break;\n                    }\n                }\n                return tag;\n            } else if (is(token, \"tag-close\")) {\n                tag.selfClosing = token.value == '/>';\n                return tag;\n            }\n            tag.start.column += token.value.length;\n        }\n\n        return null;\n    };\n\n    this._findEndTagInLine = function(session, row, tagName, startColumn) {\n        var tokens = session.getTokens(row);\n        var column = 0;\n        for (var i = 0; i < tokens.length; i++) {\n            var token = tokens[i];\n            column += token.value.length;\n            if (column < startColumn)\n                continue;\n            if (is(token, \"end-tag-open\")) {\n                token = tokens[i + 1];\n                if (token && token.value == tagName)\n                    return true;\n            }\n        }\n        return false;\n    };\n    this._readTagForward = function(iterator) {\n        var token = iterator.getCurrentToken();\n        if (!token)\n            return null;\n\n        var tag = new Tag();\n        do {\n            if (is(token, \"tag-open\")) {\n                tag.closing = is(token, \"end-tag-open\");\n                tag.start.row = iterator.getCurrentTokenRow();\n                tag.start.column = iterator.getCurrentTokenColumn();\n            } else if (is(token, \"tag-name\")) {\n                tag.tagName = token.value;\n            } else if (is(token, \"tag-close\")) {\n                tag.selfClosing = token.value == \"/>\";\n                tag.end.row = iterator.getCurrentTokenRow();\n                tag.end.column = iterator.getCurrentTokenColumn() + token.value.length;\n                iterator.stepForward();\n                return tag;\n            }\n        } while(token = iterator.stepForward());\n\n        return null;\n    };\n    \n    this._readTagBackward = function(iterator) {\n        var token = iterator.getCurrentToken();\n        if (!token)\n            return null;\n\n        var tag = new Tag();\n        do {\n            if (is(token, \"tag-open\")) {\n                tag.closing = is(token, \"end-tag-open\");\n                tag.start.row = iterator.getCurrentTokenRow();\n                tag.start.column = iterator.getCurrentTokenColumn();\n                iterator.stepBackward();\n                return tag;\n            } else if (is(token, \"tag-name\")) {\n                tag.tagName = token.value;\n            } else if (is(token, \"tag-close\")) {\n                tag.selfClosing = token.value == \"/>\";\n                tag.end.row = iterator.getCurrentTokenRow();\n                tag.end.column = iterator.getCurrentTokenColumn() + token.value.length;\n            }\n        } while(token = iterator.stepBackward());\n\n        return null;\n    };\n    \n    this._pop = function(stack, tag) {\n        while (stack.length) {\n            \n            var top = stack[stack.length-1];\n            if (!tag || top.tagName == tag.tagName) {\n                return stack.pop();\n            }\n            else if (this.optionalEndTags.hasOwnProperty(top.tagName)) {\n                stack.pop();\n                continue;\n            } else {\n                return null;\n            }\n        }\n    };\n    \n    this.getFoldWidgetRange = function(session, foldStyle, row) {\n        var firstTag = this._getFirstTagInLine(session, row);\n        \n        if (!firstTag) {\n            return this.getCommentFoldWidget(session, row)\n                && session.getCommentFoldRange(row, session.getLine(row).length);\n        }\n        \n        var isBackward = firstTag.closing || firstTag.selfClosing;\n        var stack = [];\n        var tag;\n        \n        if (!isBackward) {\n            var iterator = new TokenIterator(session, row, firstTag.start.column);\n            var start = {\n                row: row,\n                column: firstTag.start.column + firstTag.tagName.length + 2\n            };\n            if (firstTag.start.row == firstTag.end.row)\n                start.column = firstTag.end.column;\n            while (tag = this._readTagForward(iterator)) {\n                if (tag.selfClosing) {\n                    if (!stack.length) {\n                        tag.start.column += tag.tagName.length + 2;\n                        tag.end.column -= 2;\n                        return Range.fromPoints(tag.start, tag.end);\n                    } else\n                        continue;\n                }\n                \n                if (tag.closing) {\n                    this._pop(stack, tag);\n                    if (stack.length == 0)\n                        return Range.fromPoints(start, tag.start);\n                }\n                else {\n                    stack.push(tag);\n                }\n            }\n        }\n        else {\n            var iterator = new TokenIterator(session, row, firstTag.end.column);\n            var end = {\n                row: row,\n                column: firstTag.start.column\n            };\n            \n            while (tag = this._readTagBackward(iterator)) {\n                if (tag.selfClosing) {\n                    if (!stack.length) {\n                        tag.start.column += tag.tagName.length + 2;\n                        tag.end.column -= 2;\n                        return Range.fromPoints(tag.start, tag.end);\n                    } else\n                        continue;\n                }\n                \n                if (!tag.closing) {\n                    this._pop(stack, tag);\n                    if (stack.length == 0) {\n                        tag.start.column += tag.tagName.length + 2;\n                        if (tag.start.row == tag.end.row && tag.start.column < tag.end.column)\n                            tag.start.column = tag.end.column;\n                        return Range.fromPoints(tag.start, end);\n                    }\n                }\n                else {\n                    stack.push(tag);\n                }\n            }\n        }\n        \n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/xml\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/lib/lang\",\"ace/mode/text\",\"ace/mode/xml_highlight_rules\",\"ace/mode/behaviour/xml\",\"ace/mode/folding/xml\",\"ace/worker/worker_client\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar lang = acequire(\"../lib/lang\");\nvar TextMode = acequire(\"./text\").Mode;\nvar XmlHighlightRules = acequire(\"./xml_highlight_rules\").XmlHighlightRules;\nvar XmlBehaviour = acequire(\"./behaviour/xml\").XmlBehaviour;\nvar XmlFoldMode = acequire(\"./folding/xml\").FoldMode;\nvar WorkerClient = acequire(\"../worker/worker_client\").WorkerClient;\n\nvar Mode = function() {\n   this.HighlightRules = XmlHighlightRules;\n   this.$behaviour = new XmlBehaviour();\n   this.foldingRules = new XmlFoldMode();\n};\n\noop.inherits(Mode, TextMode);\n\n(function() {\n\n    this.voidElements = lang.arrayToMap([]);\n\n    this.blockComment = {start: \"<!--\", end: \"-->\"};\n\n    this.createWorker = function(session) {\n        var worker = new WorkerClient([\"ace\"], require(\"../worker/xml\"), \"Worker\");\n        worker.attachToDocument(session.getDocument());\n\n        worker.on(\"error\", function(e) {\n            session.setAnnotations(e.data);\n        });\n\n        worker.on(\"terminate\", function() {\n            session.clearAnnotations();\n        });\n\n        return worker;\n    };\n    \n    this.$id = \"ace/mode/xml\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});\n"],"sourceRoot":""}