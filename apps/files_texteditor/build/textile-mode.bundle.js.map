{"version":3,"sources":["webpack:///./node_modules/brace/mode/textile.js"],"names":["ace","define","acequire","exports","module","oop","TextHighlightRules","TextileHighlightRules","this","$rules","token","value","charAt","regex","next","inherits","Range","MatchingBraceOutdent","checkOutdent","line","input","test","autoOutdent","doc","row","match","getLine","column","length","openBracePos","findMatchingBracket","indent","$getIndent","replace","call","prototype","TextMode","Mode","HighlightRules","$outdent","$behaviour","$defaultBehaviour","type","getNextLineIndent","state","tab","$id"],"mappings":"mIAAAA,IAAIC,OAAO,mCAAmC,CAAC,UAAU,UAAU,SAAS,cAAc,kCAAkC,SAASC,EAAUC,EAASC,GACxJ,aAEA,IAAIC,EAAMH,EAAS,cACfI,EAAqBJ,EAAS,0BAA0BI,mBAExDC,EAAwB,WACxBC,KAAKC,OAAS,CACV,MAAU,CACN,CACIC,MAAQ,SAASC,GACb,MAAuB,KAAnBA,EAAMC,OAAO,GACN,kBAAoBD,EAAMC,OAAO,GAEjC,kBAEfC,MAAQ,gCACRC,KAAQ,YAEZ,CACIJ,MAAQ,UACRG,MAAQ,eAEZ,CACIH,MAAQ,OACRG,MAAQ,OAGhB,SAAa,CACT,CACIH,MAAQ,UACRG,MAAQ,OACRC,KAAQ,SAEZ,CACIJ,MAAQ,UACRG,MAAQ,MACRC,KAAQ,uBAGhB,mBAAuB,CACnB,CACIJ,MAAQ,UACRG,MAAQ,MACRC,KAAQ,YAEZ,CACIJ,MAAQ,SACRG,MAAQ,oBAEZ,CACIH,MAAQ,UACRG,MAAQ,QAMxBR,EAAIU,SAASR,EAAuBD,GAEpCH,EAAQI,sBAAwBA,KAIhCP,IAAIC,OAAO,kCAAkC,CAAC,UAAU,UAAU,SAAS,cAAc,SAASC,EAAUC,EAASC,GACrH,aAEA,IAAIY,EAAQd,EAAS,YAAYc,MAE7BC,EAAuB,cAE3B,WAEIT,KAAKU,aAAe,SAASC,EAAMC,GAC/B,QAAM,QAAQC,KAAKF,IAGZ,SAASE,KAAKD,IAGzBZ,KAAKc,YAAc,SAASC,EAAKC,GAC7B,IACIC,EADOF,EAAIG,QAAQF,GACNC,MAAM,YAEvB,IAAKA,EAAO,OAAO,EAEnB,IAAIE,EAASF,EAAM,GAAGG,OAClBC,EAAeN,EAAIO,oBAAoB,CAACN,IAAKA,EAAKG,OAAQA,IAE9D,IAAKE,GAAgBA,EAAaL,KAAOA,EAAK,OAAO,EAErD,IAAIO,EAASvB,KAAKwB,WAAWT,EAAIG,QAAQG,EAAaL,MACtDD,EAAIU,QAAQ,IAAIjB,EAAMQ,EAAK,EAAGA,EAAKG,EAAO,GAAII,IAGlDvB,KAAKwB,WAAa,SAASb,GACvB,OAAOA,EAAKM,MAAM,QAAQ,MAG/BS,KAAKjB,EAAqBkB,WAE7BhC,EAAQc,qBAAuBA,KAG/BjB,IAAIC,OAAO,mBAAmB,CAAC,UAAU,UAAU,SAAS,cAAc,gBAAgB,mCAAmC,oCAAoC,SAASC,EAAUC,EAASC,GAC7L,aAEA,IAAIC,EAAMH,EAAS,cACfkC,EAAWlC,EAAS,UAAUmC,KAC9B9B,EAAwBL,EAAS,6BAA6BK,sBAC9DU,EAAuBf,EAAS,4BAA4Be,qBAE5DoB,EAAO,WACP7B,KAAK8B,eAAiB/B,EACtBC,KAAK+B,SAAW,IAAItB,EACpBT,KAAKgC,WAAahC,KAAKiC,mBAE3BpC,EAAIU,SAASsB,EAAMD,GAEnB,WACI5B,KAAKkC,KAAO,OACZlC,KAAKmC,kBAAoB,SAASC,EAAOzB,EAAM0B,GAC3C,MAAa,SAATD,EACOC,EAEJ,IAGXrC,KAAKU,aAAe,SAAS0B,EAAOzB,EAAMC,GACtC,OAAOZ,KAAK+B,SAASrB,aAAaC,EAAMC,IAG5CZ,KAAKc,YAAc,SAASsB,EAAOrB,EAAKC,GACpChB,KAAK+B,SAASjB,YAAYC,EAAKC,IAGnChB,KAAKsC,IAAM,oBACZZ,KAAKG,EAAKF,WAEbhC,EAAQkC,KAAOA","file":"textile-mode.bundle.js","sourcesContent":["ace.define(\"ace/mode/textile_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\nvar TextileHighlightRules = function() {\n    this.$rules = {\n        \"start\" : [\n            {\n                token : function(value) {\n                    if (value.charAt(0) == \"h\")\n                        return \"markup.heading.\" + value.charAt(1);\n                    else\n                        return \"markup.heading\";\n                },\n                regex : \"h1|h2|h3|h4|h5|h6|bq|p|bc|pre\",\n                next  : \"blocktag\"\n            },\n            {\n                token : \"keyword\",\n                regex : \"[\\\\*]+|[#]+\"\n            },\n            {\n                token : \"text\",\n                regex : \".+\"\n            }\n        ],\n        \"blocktag\" : [\n            {\n                token : \"keyword\",\n                regex : \"\\\\. \",\n                next  : \"start\"\n            },\n            {\n                token : \"keyword\",\n                regex : \"\\\\(\",\n                next  : \"blocktagproperties\"\n            }\n        ],\n        \"blocktagproperties\" : [\n            {\n                token : \"keyword\",\n                regex : \"\\\\)\",\n                next  : \"blocktag\"\n            },\n            {\n                token : \"string\",\n                regex : \"[a-zA-Z0-9\\\\-_]+\"\n            },\n            {\n                token : \"keyword\",\n                regex : \"#\"\n            }\n        ]\n    };\n};\n\noop.inherits(TextileHighlightRules, TextHighlightRules);\n\nexports.TextileHighlightRules = TextileHighlightRules;\n\n});\n\nace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar Range = acequire(\"../range\").Range;\n\nvar MatchingBraceOutdent = function() {};\n\n(function() {\n\n    this.checkOutdent = function(line, input) {\n        if (! /^\\s+$/.test(line))\n            return false;\n\n        return /^\\s*\\}/.test(input);\n    };\n\n    this.autoOutdent = function(doc, row) {\n        var line = doc.getLine(row);\n        var match = line.match(/^(\\s*\\})/);\n\n        if (!match) return 0;\n\n        var column = match[1].length;\n        var openBracePos = doc.findMatchingBracket({row: row, column: column});\n\n        if (!openBracePos || openBracePos.row == row) return 0;\n\n        var indent = this.$getIndent(doc.getLine(openBracePos.row));\n        doc.replace(new Range(row, 0, row, column-1), indent);\n    };\n\n    this.$getIndent = function(line) {\n        return line.match(/^\\s*/)[0];\n    };\n\n}).call(MatchingBraceOutdent.prototype);\n\nexports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\n\nace.define(\"ace/mode/textile\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/textile_highlight_rules\",\"ace/mode/matching_brace_outdent\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextMode = acequire(\"./text\").Mode;\nvar TextileHighlightRules = acequire(\"./textile_highlight_rules\").TextileHighlightRules;\nvar MatchingBraceOutdent = acequire(\"./matching_brace_outdent\").MatchingBraceOutdent;\n\nvar Mode = function() {\n    this.HighlightRules = TextileHighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n    this.type = \"text\";\n    this.getNextLineIndent = function(state, line, tab) {\n        if (state == \"intag\")\n            return tab;\n        \n        return \"\";\n    };\n\n    this.checkOutdent = function(state, line, input) {\n        return this.$outdent.checkOutdent(line, input);\n    };\n\n    this.autoOutdent = function(state, doc, row) {\n        this.$outdent.autoOutdent(doc, row);\n    };\n    \n    this.$id = \"ace/mode/textile\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n\n});\n"],"sourceRoot":""}