{"version":3,"sources":["webpack:///./node_modules/brace/mode/latex.js"],"names":["ace","define","acequire","exports","module","oop","TextHighlightRules","LatexHighlightRules","this","$rules","token","regex","next","defaultToken","normalizeRules","inherits","BaseFoldMode","FoldMode","Range","TokenIterator","keywordLevels","foldingStartMarker","foldingStopMarker","getFoldWidgetRange","session","foldStyle","row","match","line","doc","getLine","exec","latexBlock","length","latexSection","openingBracketBlock","index","closingBracketBlock","column","returnRange","keywords","stream","getCurrentToken","type","dir","value","getType","stepForward","stepBackward","stack","startColumn","getCurrentTokenColumn","startRow","step","level","unshift","shift","getCurrentTokenRange","getCurrentTokenRow","startLevel","stackDepth","endRow","test","call","prototype","TextMode","Mode","CstyleBehaviour","LatexFoldMode","HighlightRules","foldingRules","$behaviour","braces","lineCommentStart","$id","getMatching","undefined","selection","lead","startToken","getTokenAt"],"mappings":"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","file":"latex-mode.bundle.js","sourcesContent":["ace.define(\"ace/mode/latex_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\nvar LatexHighlightRules = function() {  \n\n    this.$rules = {\n        \"start\" : [{\n            token : \"comment\",\n            regex : \"%.*$\"\n        }, {\n            token : [\"keyword\", \"lparen\", \"variable.parameter\", \"rparen\", \"lparen\", \"storage.type\", \"rparen\"],\n            regex : \"(\\\\\\\\(?:documentclass|usepackage|input))(?:(\\\\[)([^\\\\]]*)(\\\\]))?({)([^}]*)(})\"\n        }, {\n            token : [\"keyword\",\"lparen\", \"variable.parameter\", \"rparen\"],\n            regex : \"(\\\\\\\\(?:label|v?ref|cite(?:[^{]*)))(?:({)([^}]*)(}))?\"\n        }, {\n            token : [\"storage.type\", \"lparen\", \"variable.parameter\", \"rparen\"],\n            regex : \"(\\\\\\\\begin)({)(verbatim)(})\",\n            next : \"verbatim\"\n        },  {\n            token : [\"storage.type\", \"lparen\", \"variable.parameter\", \"rparen\"],\n            regex : \"(\\\\\\\\begin)({)(lstlisting)(})\",\n            next : \"lstlisting\"\n        },  {\n            token : [\"storage.type\", \"lparen\", \"variable.parameter\", \"rparen\"],\n            regex : \"(\\\\\\\\(?:begin|end))({)([\\\\w*]*)(})\"\n        }, {\n            token : \"storage.type\",\n            regex : /\\\\verb\\b\\*?/,\n            next : [{\n                token : [\"keyword.operator\", \"string\", \"keyword.operator\"],\n                regex : \"(.)(.*?)(\\\\1|$)|\",\n                next : \"start\"\n            }]\n        }, {\n            token : \"storage.type\",\n            regex : \"\\\\\\\\[a-zA-Z]+\"\n        }, {\n            token : \"lparen\",\n            regex : \"[[({]\"\n        }, {\n            token : \"rparen\",\n            regex : \"[\\\\])}]\"\n        }, {\n            token : \"constant.character.escape\",\n            regex : \"\\\\\\\\[^a-zA-Z]?\"\n        }, {\n            token : \"string\",\n            regex : \"\\\\${1,2}\",\n            next  : \"equation\"\n        }],\n        \"equation\" : [{\n            token : \"comment\",\n            regex : \"%.*$\"\n        }, {\n            token : \"string\",\n            regex : \"\\\\${1,2}\",\n            next  : \"start\"\n        }, {\n            token : \"constant.character.escape\",\n            regex : \"\\\\\\\\(?:[^a-zA-Z]|[a-zA-Z]+)\"\n        }, {\n            token : \"error\", \n            regex : \"^\\\\s*$\", \n            next : \"start\" \n        }, {\n            defaultToken : \"string\"\n        }],\n        \"verbatim\": [{\n            token : [\"storage.type\", \"lparen\", \"variable.parameter\", \"rparen\"],\n            regex : \"(\\\\\\\\end)({)(verbatim)(})\",\n            next : \"start\"\n        }, {\n            defaultToken : \"text\"\n        }],\n        \"lstlisting\": [{\n            token : [\"storage.type\", \"lparen\", \"variable.parameter\", \"rparen\"],\n            regex : \"(\\\\\\\\end)({)(lstlisting)(})\",\n            next : \"start\"\n        }, {\n            defaultToken : \"text\"\n        }]\n    };\n\n    this.normalizeRules();\n};\noop.inherits(LatexHighlightRules, TextHighlightRules);\n\nexports.LatexHighlightRules = LatexHighlightRules;\n\n});\n\nace.define(\"ace/mode/folding/latex\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/fold_mode\",\"ace/range\",\"ace/token_iterator\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../../lib/oop\");\nvar BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\nvar Range = acequire(\"../../range\").Range;\nvar TokenIterator = acequire(\"../../token_iterator\").TokenIterator;\nvar keywordLevels = {\n    \"\\\\subparagraph\": 1,\n    \"\\\\paragraph\": 2,\n    \"\\\\subsubsubsection\": 3,\n    \"\\\\subsubsection\": 4,\n    \"\\\\subsection\": 5,\n    \"\\\\section\": 6,\n    \"\\\\chapter\": 7,\n    \"\\\\part\": 8,\n    \"\\\\begin\": 9,\n    \"\\\\end\": 10\n};\n\nvar FoldMode = exports.FoldMode = function() {};\n\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n\n    this.foldingStartMarker = /^\\s*\\\\(begin)|\\s*\\\\(part|chapter|(?:sub)*(?:section|paragraph))\\b|{\\s*$/;\n    this.foldingStopMarker = /^\\s*\\\\(end)\\b|^\\s*}/;\n\n    this.getFoldWidgetRange = function(session, foldStyle, row) {\n        var line = session.doc.getLine(row);\n        var match = this.foldingStartMarker.exec(line);\n        if (match) {\n            if (match[1])\n                return this.latexBlock(session, row, match[0].length - 1);\n            if (match[2])\n                return this.latexSection(session, row, match[0].length - 1);\n\n            return this.openingBracketBlock(session, \"{\", row, match.index);\n        }\n\n        var match = this.foldingStopMarker.exec(line);\n        if (match) {\n            if (match[1])\n                return this.latexBlock(session, row, match[0].length - 1);\n\n            return this.closingBracketBlock(session, \"}\", row, match.index + match[0].length);\n        }\n    };\n\n    this.latexBlock = function(session, row, column, returnRange) {\n        var keywords = {\n            \"\\\\begin\": 1,\n            \"\\\\end\": -1\n        };\n\n        var stream = new TokenIterator(session, row, column);\n        var token = stream.getCurrentToken();\n        if (!token || !(token.type == \"storage.type\" || token.type == \"constant.character.escape\"))\n            return;\n\n        var val = token.value;\n        var dir = keywords[val];\n\n        var getType = function() {\n            var token = stream.stepForward();\n            var type = token.type == \"lparen\" ?stream.stepForward().value : \"\";\n            if (dir === -1) {\n                stream.stepBackward();\n                if (type)\n                    stream.stepBackward();\n            }\n            return type;\n        };\n        var stack = [getType()];\n        var startColumn = dir === -1 ? stream.getCurrentTokenColumn() : session.getLine(row).length;\n        var startRow = row;\n\n        stream.step = dir === -1 ? stream.stepBackward : stream.stepForward;\n        while(token = stream.step()) {\n            if (!token || !(token.type == \"storage.type\" || token.type == \"constant.character.escape\"))\n                continue;\n            var level = keywords[token.value];\n            if (!level)\n                continue;\n            var type = getType();\n            if (level === dir)\n                stack.unshift(type);\n            else if (stack.shift() !== type || !stack.length)\n                break;\n        }\n\n        if (stack.length)\n            return;\n\n        if (dir == 1) {\n            stream.stepBackward();\n            stream.stepBackward();\n        }\n\n        if (returnRange)\n            return stream.getCurrentTokenRange();\n\n        var row = stream.getCurrentTokenRow();\n        if (dir === -1)\n            return new Range(row, session.getLine(row).length, startRow, startColumn);\n        else\n            return new Range(startRow, startColumn, row, stream.getCurrentTokenColumn());\n    };\n\n    this.latexSection = function(session, row, column) {\n        var stream = new TokenIterator(session, row, column);\n        var token = stream.getCurrentToken();\n        if (!token || token.type != \"storage.type\")\n            return;\n\n        var startLevel = keywordLevels[token.value] || 0;\n        var stackDepth = 0;\n        var endRow = row;\n\n        while(token = stream.stepForward()) {\n            if (token.type !== \"storage.type\")\n                continue;\n            var level = keywordLevels[token.value] || 0;\n\n            if (level >= 9) {\n                if (!stackDepth)\n                    endRow = stream.getCurrentTokenRow() - 1;\n                stackDepth += level == 9 ? 1 : - 1;\n                if (stackDepth < 0)\n                    break;\n            } else if (level >= startLevel)\n                break;\n        }\n\n        if (!stackDepth)\n            endRow = stream.getCurrentTokenRow() - 1;\n\n        while (endRow > row && !/\\S/.test(session.getLine(endRow)))\n            endRow--;\n\n        return new Range(\n            row, session.getLine(row).length,\n            endRow, session.getLine(endRow).length\n        );\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/latex\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/latex_highlight_rules\",\"ace/mode/behaviour/cstyle\",\"ace/mode/folding/latex\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextMode = acequire(\"./text\").Mode;\nvar LatexHighlightRules = acequire(\"./latex_highlight_rules\").LatexHighlightRules;\nvar CstyleBehaviour = acequire(\"./behaviour/cstyle\").CstyleBehaviour;\nvar LatexFoldMode = acequire(\"./folding/latex\").FoldMode;\n\nvar Mode = function() {\n    this.HighlightRules = LatexHighlightRules;\n    this.foldingRules = new LatexFoldMode();\n    this.$behaviour = new CstyleBehaviour({ braces: true });\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n    this.type = \"text\";\n    \n    this.lineCommentStart = \"%\";\n\n    this.$id = \"ace/mode/latex\";\n\n    this.getMatching = function(session, row, column) {\n        if (row == undefined)\n            row = session.selection.lead;\n        if (typeof row == \"object\") {\n            column = row.column;\n            row = row.row;\n        }\n\n        var startToken = session.getTokenAt(row, column);\n        if (!startToken)\n            return;\n        if (startToken.value == \"\\\\begin\" || startToken.value == \"\\\\end\") {\n            return this.foldingRules.latexBlock(session, row, column, true);\n        }\n    };\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n\n});\n"],"sourceRoot":""}